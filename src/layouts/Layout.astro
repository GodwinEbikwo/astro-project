---
import Nav from '../components/Nav.astro';

export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <meta http-equiv='X-UA-Compatible' content='IE=edge' />
    <meta name='viewport' content='width=device-width, initial-scale=1.0' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <meta name='generator' content={Astro.generator} />
    <title>{title}</title>
    <link rel='preconnect' href='https://fonts.googleapis.com' />
    <link rel='preconnect' href='https://fonts.gstatic.com' crossorigin />
    <link
      href='https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap'
      rel='stylesheet'
    />
  </head>
  <body>
    <Nav />

    <main role='main' id='main' class='main'>
      <article>
        <slot />
      </article>
    </main>

    <style lang='scss' is:global>
      :root {
        --font: 'Inter', system-ui, sans-serif;
        --px: 2.5rem;
        --py: 2.5rem;
        --accent: 124, 58, 237;
        --bg: rgb(0, 2, 18);
        --fg: hsl(56, 3.7%, 17.4%);
        --text-color: rgba(255, 255, 255, 0.85);
        --border-color: rgba(255, 255, 255, 0.3);
        --ls: -0.09em;
        --duration: 0.5s;
      }

      *,
      *::before,
      *::after {
        box-sizing: border-box;
      }

      html,
      body,
      div,
      span,
      object,
      h1,
      h2,
      h3,
      h4,
      h5,
      h6,
      p,
      blockquote,
      pre,
      a,
      abbr,
      acronym,
      address,
      big,
      cite,
      code,
      del,
      dfn,
      em,
      ol,
      ul,
      li,
      fieldset,
      form,
      label,
      legend,
      caption,
      article,
      aside,
      canvas,
      details,
      embed,
      figure,
      figcaption,
      footer,
      header,
      hgroup,
      menu,
      nav,
      output,
      ruby,
      section,
      summary,
      time,
      mark,
      audio,
      video {
        margin: 0;
        padding: 0;
        border: 0;
        font: inherit;
        vertical-align: baseline;
      }
      /* HTML5 display-role reset for older browsers */
      article,
      aside,
      details,
      figcaption,
      figure,
      footer,
      header,
      hgroup,
      menu,
      nav,
      section {
        display: block;
      }

      ol,
      ul {
        list-style: none;
      }

      blockquote,
      q {
        quotes: none;
      }

      blockquote:before,
      blockquote:after,
      q:before,
      q:after {
        content: '';
        content: none;
      }

      html {
        font-family: var(--font);
        scroll-behavior: initial;
      }

      html,
      body {
        width: 100%;
        min-height: 100%;
      }

      a {
        text-decoration: inherit;
        color: inherit;
        background-color: transparent;
      }

      a:focus,
      button:focus {
        outline: none;
      }

      a:focus-visible,
      button:focus-visible {
        outline: 2px solid #eee;
        outline-offset: 3px;
      }

      body {
        width: fit-content;
        color: #120902;
        background-color: #f7f4ef;
        font-size: 1rem;
        -webkit-font-smoothing: antialiased;
        text-rendering: optimizeLegibility;
        font-variant-ligatures: contextual common-ligatures;
        font-feature-settings: 'kern' 1, 'liga' 1, 'calt' 1;
      }

      .w-full {
        width: 100%;
      }

      .h-full {
        height: 100%;
      }

      .block {
        display: block;
      }

      .inline-block {
        display: inline-block;
      }

      .overflow-hidden {
        overflow: hidden;
      }

      .relative {
        position: relative;
      }

      .flex {
        display: flex;

        &.gap {
          gap: 2em;
        }

        &.ai {
          align-items: center;
        }

        &.jc {
          justify-content: center;
        }

        &.flex-column {
          flex-direction: column;
        }

        &.flex-row {
          flex-direction: row;
        }

        &.space-between {
          justify-content: space-between;
        }
      }

      .link {
        cursor: pointer;
        position: relative;
        white-space: nowrap;
      }

      .link::before,
      .link::after {
        position: absolute;
        width: 100%;
        height: 1px;
        background: currentColor;
        top: 100%;
        left: 0;
        pointer-events: none;
      }

      .link::before {
        content: '';
      }

      .link--metis {
        text-transform: inherit;
      }

      .link--metis::before {
        transform-origin: 100% 50%;
        transform: scale3d(0, 1, 1);
        transition: transform 0.5s;
      }

      .link--metis:hover::before {
        transform-origin: 0% 50%;
        transform: scale3d(1, 1, 1);
      }

      ._wrapper {
        height: 100vh;
        height: calc(var(--vh, 1vh) * 100);
        display: inline-flex;
        width: auto;
      }
    </style>

    <script>
      import Lenis from '@studio-freight/lenis';

      const lenis = new Lenis({
        duration: 1.2,
        easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)), // https://www.desmos.com/calculator/brs54l4xou
        direction: 'horizontal',
        smooth: true,
        smoothTouch: false,
        touchMultiplier: 2,
        infinite: false,
      });

      //get scroll value
      function raf(time) {
        lenis.raf(time);
        requestAnimationFrame(raf);
      }

      requestAnimationFrame(raf);

      const vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', `${vh}px`);

      window.addEventListener('resize', () => {
        const vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', `${vh}px`);
      });
    </script>
  </body>
</html>
